/*
COLORS:

Light green: #7ed56f
Medium green: #55c57a
Dark green: #28b485

*/

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 400;
  font-size: 16px;
  line-height: 1.7;
  color: #777;
  
  /* paddingは継承されない */
  padding: 30px;
}

.header {
  height: 95vh;
  position: relative;

  background-image: 
    linear-gradient(
      to right bottom,
    hsla(111, 55%, 64%, 0.8), hsla(160, 64%, 43%, 0.8)
    ),
    url(../img/hero.jpg);

  background-size: cover;
  background-position: top;

  /* 斜めに切り取るために4点の座標を指定 */
  clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
}

.logo-box {
  position: absolute;
  top: 40px;
  left: 40px;
}

.logo {
  /* 画像の大きさを指定 */
  /* 横の長さは指定できるが通常は指定しない（ブラウザが自動的に計算してくれる） */
  height: 35px;
}

/* 上下左右の中央に持ってくるためのイディオムのようなもの */
.text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  transform: translate(-50%, -50%);

  /* 子要素の開始位置を指定 */
  /* line-blockのbtn要素も真ん中になる */
  text-align: center;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;

  /*
  子要素がアニメーションの際に意図しないブレを起こる場合があり、それを補正するためのハック
  */
  backface-visibility: hidden;

  margin: 60px;
}

.heading-primary-main {
  display: block;
  font-size: 60px;
  font-weight: 400;
  letter-spacing: 35px;

  animation-name: moveInLeft;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  /* animation-delay: 1s; */
}

.heading-primary-sub {
  display: block;
  font-size: 20px;
  font-weight: 700;
  letter-spacing: 17.5px;

  /* 
  animation-name: moveInRight;
  animation-duration: 1s;
  animation-timing-function: ease-out;
  */
  /* animationは下記のように省略して書ける */
  animation: moveInRight 1s ease-out;
  
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }

  80% {
    transform: translateX(10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }

  80% {
    transform: translateX(-10px);
  }

  100% {
    opacity: 1;
    transform: translate(0);
  }
}

.btn:link,
.btn:visited {
  text-transform: uppercase;
  text-decoration: none;

  /* 
  ・display: blockの場合はいっぱいに要素が広がってしまうのでinline-blockかinlineを使う
  ・inlineの場合は上下のmarginはつけることはできない。また上下のpaddingをつけると他の要素と重なってしまう。
  上記より、要素幅を横いっぱいに広げたくないボタンかつpaddingを付けたいので、display: inline-block;とする
  ※他にもinline-blockには要素が横に並ぶなどの特徴がある。
  https://saruwakakun.com/html-css/basic/display#section2
  */
  display: inline-block;
  padding: 15px 40px;


  border-radius: 100px;

  /* 
  順不同で下記の4点を指定できる
  ・transition-duration：アニメーションにかかる時間
  ・transition-property：アニメーションさせるプロパティ
  ・transition-timing-function：アニメーションの変化の仕方
  ・transition-delay：アニメーション開始の遅れ時間
  ※時間に関するものは順番が関係あり。
  全てのプロパティのアニメーションを許可する場合は下記のようにallとする
  */
  transition: all .2s
}

.btn:hover {
  transform: translateY(-3px);
  /*
  box-shadow X方向の距離 Y方向の距離 ぼかし距離 影の色
  「ぼかし距離」は小さい(近い)ほどはっきり見える
  */
  box-shadow: 0 10px 20px rgba(0,0,0,.2);
}

/* btnがクリックされている状態の場合はhoverしている時よりも、相対的に2px下に移動する */
.btn:active {
  transform: translateY(-1px);
  box-shadow: 0 5px 10px rgba(0,0,0,.2);
}




.btn-white {
  background-color: #fff;
  color: #777;
}